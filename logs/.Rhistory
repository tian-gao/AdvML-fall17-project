?read.csv
content_loss <- read.csv('run_neural_network-tag-content_loss.csv')
apply(content_loss, 2, class)
View(content_loss)
library(reshape2)
library(ggplot2)
content_loss <- read.csv('run_neural_network-tag-content_loss.csv')
style_loss <- read.csv('run_neural_network-tag-style_loss.csv')
tv_loss <- read.csv('run_neural_network-tag-tv_loss.csv')
total_loss <- read.csv('run_neural_network-tag-total_loss.csv')
View(tv_loss)
View(tv_loss)
View(total_loss)
View(content_loss)
list(content_loss, style_loss)
df_plot = list(
content = content_loss,
style = style_loss
)
df_plot$content
df_plot.names
names(df_plot)
df_plot['content']
df_plot = list(
content = content_loss,
style = style_loss,
tv = tv_loss,
total = total_loss
)
for (loss_type in names(df_plot)) {
print(loss_type)
}
for (loss_type in names(df_plot)) {
df <- df_plot[loss_type]
}
df
d
class(df)
df[1]
df[[1]]
for (loss_type in names(df_plot)) {
df <- df_plot[loss_type][[1]]
}
View(df)
fig <- ggplot(data = df, aes(x = Step, y = Value)) +
geom_line() + xlim(c(0, 1000))
fig
content_loss$log_loss <- log(content_loss$Value)
View(content_loss)
library(ggplot2)
content_loss <- read.csv('run_neural_network-tag-content_loss.csv')
style_loss <- read.csv('run_neural_network-tag-style_loss.csv')
tv_loss <- read.csv('run_neural_network-tag-tv_loss.csv')
total_loss <- read.csv('run_neural_network-tag-total_loss.csv')
content_loss$log_loss <- log(content_loss$Value)
style_loss$log_loss <- log(style_loss$Value)
tv_loss$log_loss <- log(tv_loss$Value)
total_loss$log_loss <- log(total_loss$Value)
df_plot = list(
content = content_loss,
style = style_loss,
tv = tv_loss,
total = total_loss
)
for (loss_type in names(df_plot)) {
df <- df_plot[loss_type][[1]]
}
df
toupper(loss_type)
capitalize(loss_type)
library(Hmisc)
fig <- ggplot(data = df, aes(x = Step, y = Value)) +
geom_line() + theme_bw() + xlim(c(0, 1000)) +
labs(x = 'number of step', y = paste(loss_type, 'loss'))
fig
fig <- ggplot(data = df, aes(x = Step, y = Value)) +
geom_line() + theme_bw() + xlim(c(0, 1000)) +
labs(x = 'number of step', y = paste(loss_type, 'loss')) +
theme(panel.background = element_blank()) +
theme(panel.border = element_blank()) +
theme(axis.line = element_line(size = 0.3)) +
theme(axis.ticks.x = element_blank())
fig
fig <- ggplot(data = df, aes(x = Step, y = Value)) +
geom_line() + theme_bw() + xlim(c(0, 1000)) +
labs(x = 'number of step', y = paste(loss_type, 'loss')) +
theme(panel.background = element_blank()) +
theme(panel.border = element_blank()) +
theme(axis.ticks.x = element_blank())
fig
fig <- ggplot(data = df, aes(x = Step, y = Value)) +
geom_line() + theme_bw() + xlim(c(0, 1000)) +
labs(x = 'number of step', y = paste(loss_type, 'loss')) +
theme(panel.background = element_blank()) +
theme(panel.border = element_blank())
fig
fig <- ggplot(data = df, aes(x = Step, y = Value)) +
geom_line() + theme_bw() + xlim(c(0, 1000)) +
labs(x = 'number of step', y = paste(loss_type, 'loss')) +
theme(panel.background = element_blank())
fig
fig_logloss <- ggplot(data = df, aes(x = Step, y = log_loss)) +
geom_line() + theme_bw() + xlim(c(0, 1000)) +
labs(x = 'number of step', y = paste(loss_type, 'log loss')) +
theme(panel.background = element_blank())
fig_logloss
fig_logloss <- ggplot(data = df, aes(x = Step, y = log_loss)) +
geom_line() + theme_bw() + xlim(c(0, 1000)) +
labs(x = 'number of step', y = paste('log', loss_type, 'loss')) +
theme(panel.background = element_blank())
fig_logloss
fig_loss <- ggplot(data = df, aes(x = Step, y = Value)) +
geom_line() + theme_bw() + xlim(c(0, 1000)) +
labs(x = 'number of step', y = paste(loss_type, 'loss')) +
theme(panel.background = element_blank())
ggsave(paste(loss_type, '_loss.pdf'), fig_loss, width = 10, height = 6)
ggsave(paste(loss_type, '_loss.pdf'), fig_loss, width = 10, height = 10)
ggsave(paste(loss_type, '_loss.pdf'), fig_loss, width = 10, height = 8)
df_plot = list(
content = content_loss,
style = style_loss,
tv = tv_loss,
total = total_loss
)
for (loss_type in names(df_plot)) {
df <- df_plot[loss_type][[1]]
# plot loss curve
fig_loss <- ggplot(data = df, aes(x = Step, y = Value)) +
geom_line() + theme_bw() + xlim(c(0, 1000)) +
labs(x = 'number of step', y = paste(loss_type, 'loss')) +
theme(panel.background = element_blank())
ggsave(paste(loss_type, '_loss.pdf'), fig_loss, width = 10, height = 8)
# plot log loss curve
fig_log_loss <- ggplot(data = df, aes(x = Step, y = log_loss)) +
geom_line() + theme_bw() + xlim(c(0, 1000)) +
labs(x = 'number of step', y = paste(loss_type, 'log loss')) +
theme(panel.background = element_blank())
ggsave(paste(loss_type, '_log_loss.pdf'), fig_log_loss, width = 10, height = 8)
}
library(ggplot2)
content_loss <- read.csv('run_neural_network-tag-content_loss.csv')
style_loss <- read.csv('run_neural_network-tag-style_loss.csv')
tv_loss <- read.csv('run_neural_network-tag-tv_loss.csv')
total_loss <- read.csv('run_neural_network-tag-total_loss.csv')
content_loss$log_loss <- log(content_loss$Value)
style_loss$log_loss <- log(style_loss$Value)
tv_loss$log_loss <- log(tv_loss$Value)
total_loss$log_loss <- log(total_loss$Value)
df_plot = list(
content = content_loss,
style = style_loss,
tv = tv_loss,
total = total_loss
)
for (loss_type in names(df_plot)) {
df <- df_plot[loss_type][[1]]
# plot loss curve
fig_loss <- ggplot(data = df, aes(x = Step, y = Value)) +
geom_line() + theme_bw() + xlim(c(0, 1000)) +
labs(x = 'number of step', y = paste(loss_type, 'loss')) +
theme(panel.background = element_blank())
ggsave(paste(loss_type, '_loss.pdf', sep = ''), fig_loss, width = 10, height = 8)
# plot log loss curve
fig_log_loss <- ggplot(data = df, aes(x = Step, y = log_loss)) +
geom_line() + theme_bw() + xlim(c(0, 1000)) +
labs(x = 'number of step', y = paste(loss_type, 'log loss')) +
theme(panel.background = element_blank())
ggsave(paste(loss_type, '_log_loss.pdf', sep = ''), fig_log_loss, width = 10, height = 8)
}
